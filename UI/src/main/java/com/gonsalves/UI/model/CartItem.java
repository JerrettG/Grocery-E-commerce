package com.gonsalves.UI.model;

import com.amazonaws.services.dynamodbv2.datamodeling.*;
import lombok.Data;
import lombok.NoArgsConstructor;

import java.util.Objects;

@Data
@NoArgsConstructor
@DynamoDBTable(tableName = "Ecommerce-CartService-CartItems")
public class CartItem {

    @DynamoDBAutoGeneratedKey
    @DynamoDBHashKey(attributeName = "id")
    private String id;
    @DynamoDBIndexHashKey(globalSecondaryIndexName = "user_id-product_id-index")
    @DynamoDBAttribute(attributeName = "user_id")
    private String userId;

    @DynamoDBAttribute(attributeName = "quantity")
    private int quantity;
    @DynamoDBIndexRangeKey(globalSecondaryIndexName = "user_id-product_id-index")
    @DynamoDBRangeKey(attributeName = "product_id")
    private String productId;

    @DynamoDBAttribute(attributeName = "product_name")
    private String productName;
    @DynamoDBAttribute(attributeName = "product_image_url")
    private String productImageUrl;
    @DynamoDBAttribute(attributeName = "product_price")
    private double productPrice;

    public CartItem(String id, String userId, int quantity, String productId, String productName, String productImageUrl, double productPrice) {
        this.id = id;
        this.userId = userId;
        this.quantity = quantity;
        this.productId = productId;
        this.productName = productName;
        this.productImageUrl = productImageUrl;
        this.productPrice = productPrice;
    }

    public void incrementItemQuantity(int quantity) {
        this.quantity += quantity;
    }

    @Override
    public String toString() {
        return "CartItem{" +
                "id='" + id + '\'' +
                ", userId='" + userId + '\'' +
                ", quantity=" + quantity +
                ", productId='" + productId + '\'' +
                ", productName='" + productName + '\'' +
                ", productImageUrl='" + productImageUrl + '\'' +
                ", productPrice=" + productPrice +
                '}';
    }

    @Override
    public boolean equals(Object o) {
        if (this == o) return true;
        if (o == null || getClass() != o.getClass()) return false;
        CartItem cartItem = (CartItem) o;
        return Objects.equals(id, cartItem.id);
    }

    @Override
    public int hashCode() {
        return Objects.hash(id);
    }
}
