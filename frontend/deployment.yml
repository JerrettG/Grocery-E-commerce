apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-web-deployment
  labels:
    app: frontend-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend-web
  template:
    metadata:
      labels:
        app: frontend-web
    spec:
      containers:
        - name: frontend-web
          image: docker.io/jerrettg/grocery-e-commerce-frontend-web:latest
          imagePullPolicy: Always
          ports:
            - containerPort: 8080
          env:
            - name: STRIPE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: stripe-api-key
            - name: STRIPE_PUBLIC_KEY
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: stripe-public-key
            - name: STRIPE_WEBHOOK_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: stripe-webhook-secret
            - name: AUTH_CLIENT_ID
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: auth-client-id
            - name: AUTH_CLIENT_SECRET
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: auth-client-secret
            - name: AUTH_ISSUER_URI
              valueFrom:
                secretKeyRef:
                  name: secret
                  key: auth-issuer-uri
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-web-svc
spec:
  selector:
    app: frontend-web
  ports:
    - protocol: TCP
      port: 8080
      targetPort:
  type: LoadBalancer
#apiVersion: v1
#kind: Service
#metadata:
#  name: frontend-web-svc
#spec:
#  type: NodePort
#  selector:
#    app: frontend-web
#  ports:
#    - protocol: TCP
#      port: 80
#      targetPort: 8080